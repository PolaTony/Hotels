Imports System.Data.SqlClient
Imports DevExpress.XtraGrid.Views.Base
Imports DevExpress.XtraGrid.Views.Grid
Imports Infragistics.Win
Imports Infragistics.Win.UltraWinGrid
Imports Infragistics.Win.UltraWinDataSource
Imports Infragistics.Win.UltraWinEditors
Imports Infragistics.Win.UltraWinTabControl
Imports Syncfusion.Windows.Forms.Tools.ToggleButtonState
Imports Syncfusion.Windows.Forms.Tools

'Imports Syncfusion.Windows.Forms.Tools.ToggleButtonState

Public Class Frm_Users_A
    Sub New()

        InitializeComponent()
        ' This line of code is generated by Data Source Configuration Wizard
        ' Fill a SqlDataSource
        'SqlDataSource1.Fill()
        ' This line of code is generated by Data Source Configuration Wizard
        'EntityServerModeSource1.QueryableSource = New Retex.ERPEntities().Items
    End Sub
#Region " Declaration                                                                    "
    Dim vMasterBlock As String = "NI"
    Dim vSales_Employees_Auth_Checked_Changed = "N"
    Dim vcFrmLevel As New cFrmLevelVariables_A
    'Dim vcFrmLevel As Object = System.Reflection.Assembly.GetExecutingAssembly.CreateInstance(System.Reflection.Assembly.GetExecutingAssembly.GetName().Name & ".cFrmLevelVariables_" & vLang)
    Dim vSqlStatment(0) As String
    Dim vIsAdmin As String
    Dim vFocus As String = "Master"
#End Region
#Region " Form Level                                                                     "
#Region " My Form                                                                        "
    Private Sub FRM_Users_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        'cControls.sLoadSettings(Me.Name, Grd_Summary)
        'sQuerySummary()
        'sQueryUser(vUsrCode)
        sLoadProfiles()

        vMasterBlock = "NI"
        Txt_FndBy_IsActive.SelectedIndex = 0

    End Sub
    Private Sub sFillSqlStatmentArray(ByVal pSqlstring As String)
        If vSqlStatment(UBound(vSqlStatment)) = "" Then
            vSqlStatment(UBound(vSqlStatment)) = pSqlstring
        Else
            ReDim Preserve vSqlStatment(UBound(vSqlStatment) + 1)
            vSqlStatment(UBound(vSqlStatment)) = pSqlstring
        End If
    End Sub
    Private Sub sEmptySqlStatmentArray()
        ReDim Preserve vSqlStatment(0)
        vSqlStatment(0) = ""
    End Sub
    Private Sub FRM_Users_Activated(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Activated
        vcFrmLevel.vParentFrm = Me.ParentForm
        sHide_ToolbarMain_Tools()

        'Tab_Main.Tabs("Tab_Details").Selected = True

        If Tab_Main.Tabs("Tab_Summary").Selected = True Then
            vcFrmLevel.vParentFrm.sEnableTools(True, False, False, False, False, False, False, False, "", False, False, "التفاصيل")
        Else
            vcFrmLevel.vParentFrm.sEnableTools(True, True, True, True, True, True, True, True, "", True, False, "بحث")
        End If

        If vcFrmLevel.vRecPos > 0 Then
            vcFrmLevel.vParentFrm.sPrintRec(vcFrmLevel.vRecPos)
        Else
            vcFrmLevel.vParentFrm.sPrintRec("")
        End If

        'Dim vTool As Infragistics.Win.UltraWinToolbars.StateButtonTool
        'vTool = vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Chk_Help")
        'sIsHelpEnabled(vTool.Checked)
    End Sub
    Private Sub FRM_Users_Closing(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles Me.Closing
        If fSaveAll(True) = False Then
            e.Cancel = True
        Else
            e.Cancel = False
            vcFrmLevel.vParentFrm.sPrintRec("")
        End If

        cControls.sSaveSettings(Me.Name, Grd_Summary)
    End Sub
    Private Sub FRM_Users_Closed(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Closed
        If Me.ParentForm.MdiChildren.Length = 1 Then
            vcFrmLevel.vParentFrm.sEnableTools(True, True, True, True, True, True, True, False, "", True)
        End If
    End Sub
    Private Sub Txt_All_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) _
        Handles Txt_Desc.KeyUp, Txt_address.KeyUp, Txt_SalesTypes.KeyUp,
        Txt_FirstTimeDeal.KeyUp, Txt_Remarks.KeyUp, Txt_Email1.KeyUp, Txt_Email2.KeyUp,
         Txt_FTel.KeyUp, Txt_MTel.KeyUp

        If e.KeyData = Keys.Enter Then
            SendKeys.Send("{Tab}")
        End If

    End Sub
    Private Sub Txt_All_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) _
    Handles Txt_Desc.ValueChanged, Txt_address.ValueChanged, Txt_SalesTypes.ValueChanged,
            Txt_FirstTimeDeal.ValueChanged, Txt_Remarks.ValueChanged, Txt_Email1.ValueChanged,
            Txt_FTel.ValueChanged, Txt_MTel.ValueChanged, Txt_UserName.ValueChanged,
            Txt_Password.ValueChanged, Txt_Email2.ValueChanged, Txt_Profiles.ValueChanged,
            Txt_Box.ValueChanged, Txt_Store.ValueChanged, Txt_Branch.ValueChanged,
            Txt_SalesType.ValueChanged, Txt_CostCenter.ValueChanged, Chk_IsActive.CheckedChanged,
            Opt_E.CheckedChanged, Opt_C.CheckedChanged, Opt_S.CheckedChanged,
            Txt_SalesInvoice_Employees_Auth.ValueChanged, Txt_DescL.ValueChanged,
            Txt_Id.ValueChanged, Txt_Id_ExpiredDate.ValueChanged,
            Txt_PassportNum.ValueChanged, Txt_PassportNum_ExpiredDate.ValueChanged,
            Txt_Nationality.ValueChanged, Txt_Qualification.ValueChanged, Txt_Title.ValueChanged,
            Txt_Salary.ValueChanged, Txt_PaymentMethod.ValueChanged

        If vMasterBlock = "NI" Then
            vMasterBlock = "I"
        ElseIf vMasterBlock = "N" Then
            vMasterBlock = "U"
        End If

        If sender.Name = "Chk_IsActive" Then
            If Chk_IsActive.Checked Then
                Chk_IsActive.Tag = "Y"
                Chk_IsActive.Text = "نشط"
            Else
                Chk_IsActive.Tag = "N"
                Chk_IsActive.Text = "غير نشط"
            End If
        End If
    End Sub

    Private Sub Chk_AllToggle_ToggleStateChanged(sender As Object, e As Syncfusion.Windows.Forms.Tools.ToggleStateChangedEventArgs) _
        Handles Chk_POS_DeleteItem.ToggleStateChanged, Chk_POS_ChangePrice.ToggleStateChanged,
        Chk_POS_Deductions.ToggleStateChanged

        If sender.ToggleState = Active Then
            sender.Tag = "Y"
        Else
            sender.Tag = "N"
        End If

        If vMasterBlock = "NI" Then
            vMasterBlock = "I"
        ElseIf vMasterBlock = "N" Then
            vMasterBlock = "U"
        End If
    End Sub
    Private Sub CHK_IsSuperVisor_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) _
        Handles Chk_StopDeal.CheckedChanged, Chk_IsSalesMan.CheckedChanged

        If vMasterBlock = "NI" Then
            vMasterBlock = "I"
        ElseIf vMasterBlock = "N" Then
            vMasterBlock = "U"
        End If

        If sender.Checked Then
            sender.Tag = "Y"
        Else
            sender.Tag = "N"
        End If
    End Sub
#End Region
#Region " DataBase                                                                       "
#Region " Save                                                                           "
    Private Function fIfsaveNeeded() As Boolean
        If vMasterBlock = "I" Or vMasterBlock = "U" Then
            Return True
        End If

        Dim vRow As UltraGridRow
        For Each vRow In Grd_Screens.Rows
            If vRow.Cells("DML").Value = "I" Or vRow.Cells("DML").Value = "U" Then
                Return True
            End If

            If fCheckForChildRows(vRow) Then
                Return True
            End If
        Next

        Return False
    End Function
    Private Function fCheckForChildRows(ByVal pRow As UltraGridRow) As Boolean
        Try
            For Each vRow As UltraGridRow In pRow.ChildBands(0).Rows
                If vRow.Cells("DML").Value = "I" Or vRow.Cells("DML").Value = "U" Then
                    Return True
                End If
            Next
            Return False
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Function
    Public Function fSaveAll(ByVal pAskMe As Boolean) As Boolean
        If vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_Save").SharedProps.Enabled = False Then
            Return True
        End If

        If fIfsaveNeeded() = False Then
            Return True
        End If

        sEmptySqlStatmentArray()
        If pAskMe Then
            If vcFrmLevel.vParentFrm.sForwardMessage("6", Me) = MsgBoxResult.Yes Then
                If fSaveValidation() = True Then
                    sSaveMain()
                    'sSaveSalesInvoices_Employees()
                Else
                    Return False
                End If

                'If fValidateScreens() Then
                '    sSaveScreens_Systems()
                'Else
                '    Return False
                'End If
            Else
                Return True
            End If
        Else
            If fSaveValidation() = True Then
                sSaveMain()

            Else
                Return False
            End If

            'If fValidateScreens() Then
            '    sSaveScreens_Systems()
            'Else
            '    Return False
            'End If
        End If

        Dim vRowCounter As Integer = cControls.fSendData(vSqlStatment, Me.Name)
        If vRowCounter > 0 Then
            sSetFlagsUpdate()

            vcFrmLevel.vParentFrm.sForwardMessage("7", Me)
            Return True
        End If
    End Function

    Private Sub sSetFlagsUpdate()
        vMasterBlock = "N"

        For Each vRow As UltraGridRow In Grd_Screens.Rows
            vRow.Cells("DML").Value = "N"
            sSetFlagsUpdateForChildRows(vRow)
        Next
    End Sub
    Private Sub sSetFlagsUpdateForChildRows(ByVal pRow As UltraGridRow)
        Try
            For Each vRow As UltraGridRow In pRow.ChildBands(0).Rows
                vRow.Cells("DML").Value = "N"
            Next
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub

#End Region
#Region " Query                                                                          "
    Public Sub sQuery(Optional ByVal pRecPos As Integer = Nothing, Optional ByVal pItemCode As String = Nothing, Optional ByVal pIsGoTo As Boolean = False)
        If fSaveAll(True) = False Then
            Return
        End If

        Dim vFetchRec As Integer
        If pItemCode = Nothing Then
            If pIsGoTo = False Then
                If pRecPos = Nothing Then
                    vFetchRec = 1
                Else
                    vFetchRec = vcFrmLevel.vRecPos + pRecPos
                    If vFetchRec > cControls.fCount_Rec(" From Users Where 1 = 1 And Company_Code = " & vCompanyCode) Then
                        vcFrmLevel.vParentFrm.sForwardMessage("33", Me)
                        Return
                    End If
                    If vFetchRec = 0 Then
                        vcFrmLevel.vParentFrm.sForwardMessage("34", Me)
                        vFetchRec = 1
                    End If

                End If
            End If
        End If

        If pRecPos = -2 Then
            vFetchRec = cControls.fCount_Rec(" From Users Where 1 = 1 And Company_Code = " & vCompanyCode)
        End If

        Dim vFetchCondition As String
        If pItemCode = Nothing Then
            vFetchCondition = " And RecPos = '" & vFetchRec & "'"
        Else
            vFetchCondition = " And Code = '" & Trim(pItemCode) & "'"
        End If
        Try

            Dim vSQlcommand As New SqlCommand
            vSQlcommand.CommandText =
            " With MyEmployees as ( Select Code, " &
            "                          DescA, " &
            "                          DescL, " &
            "                          Address, " &
            "                          Remarks, " &
            "                          Email, " &
            "                          MTel, " &
            "                          UserName, " &
            "                          Password, " &
            "                          IsNull(IsActive, 'Y') as IsActive, " &
            "                          ROW_Number() Over (Order By Code) RecPos " &
            "                                                                   " &
            "                          From Users                               " &
            "                          Where 1 = 1                              " &
            "                          And Company_Code = " & vCompanyCode & ") " &
            "                                                                   " &
            "                          Select * From MyEmployees                " &
            "                          Where 1 = 1 " &
                                      vFetchCondition

            vSQlcommand.Connection = cControls.vSqlConn
            cControls.vSqlConn.Open()
            Dim vSqlReader As SqlDataReader = vSQlcommand.ExecuteReader
            Do While vSqlReader.Read

                If IsDBNull(vSqlReader("RecPos")) = False Then
                    vcFrmLevel.vRecPos = Trim(vSqlReader("RecPos"))
                End If
                vcFrmLevel.vParentFrm.sPrintRec(vSqlReader("RecPos"))

                'Code
                Txt_Code.Text = Trim(vSqlReader("Code"))

                'DescA
                Txt_Desc.Text = Trim(vSqlReader("DescA"))

                'DescL
                If IsDBNull(vSqlReader("DescL")) = False Then
                    Txt_DescL.Text = Trim(vSqlReader("DescL"))
                Else
                    Txt_DescL.Text = ""
                End If

                'Address
                If IsDBNull(vSqlReader("Address")) = False Then
                    Txt_address.Text = Trim(vSqlReader("Address"))
                Else
                    Txt_address.Text = ""
                End If

                'Remarks
                If IsDBNull(vSqlReader("Remarks")) = False Then
                    Txt_Remarks.Text = Trim(vSqlReader("Remarks"))
                Else
                    Txt_Remarks.Text = ""
                End If

                'Email
                If IsDBNull(vSqlReader("Email")) = False Then
                    Txt_Email1.Text = Trim(vSqlReader("Email"))
                Else
                    Txt_Email1.Text = ""
                End If

                'MTel
                If IsDBNull(vSqlReader("MTel")) = False Then
                    Txt_MTel.Text = Trim(vSqlReader("MTel"))
                Else
                    Txt_MTel.Text = ""
                End If

                'UserName
                If IsDBNull(vSqlReader("UserName")) = False Then
                    Txt_UserName.Text = vSqlReader("UserName")
                Else
                    Txt_UserName.Text = ""
                End If

                'Password
                If IsDBNull(vSqlReader("Password")) = False Then
                    Txt_Password.Text = vSqlReader("Password")
                Else
                    Txt_Password.Text = ""
                End If

                'IsActive
                If IsDBNull(vSqlReader("IsActive")) = False Then
                    If vSqlReader("IsActive") = "N" Then
                        Chk_IsActive.Checked = False
                    Else
                        Chk_IsActive.Checked = True
                    End If
                End If
            Loop

            cControls.vSqlConn.Close()
            vSqlReader.Close()

            sQueryScreens_Master()
            'sQuery_Departments()

        Catch ex As Exception
            cControls.vSqlConn.Close()
            MessageBox.Show(ex.Message)
            'cException.sHandleException(ex.Message, Me.Name, "sQuery")
        End Try
        vMasterBlock = "N"
    End Sub

    Private Sub sLoadProfiles()
        Txt_Profiles.Items.Clear()
        Dim vsqlCommand As New SqlClient.SqlCommand
        vsqlCommand.CommandText = " Select Code, DescA From Profiles Where 1 = 1 And Company_Code = " & vCompanyCode

        vsqlCommand.Connection = cControls.vSqlConn
        cControls.vSqlConn.Open()
        Dim vSqlReader As SqlClient.SqlDataReader = vsqlCommand.ExecuteReader
        Do While vSqlReader.Read
            Txt_Profiles.Items.Add(Trim(vSqlReader(0)), Trim(vSqlReader(1)))
        Loop
        cControls.vSqlConn.Close()
        vSqlReader.Close()

    End Sub

#End Region
#Region " Delete                                                                         "
    Public Sub sDelete()
        If vMasterBlock = "I" Then
            sNewRecord()
        ElseIf vMasterBlock = "N" Or vMasterBlock = "U" Then
            If vcFrmLevel.vParentFrm.sForwardMessage("39", Me) = MsgBoxResult.Yes Then
                Dim vSqlstring As String
                vSqlstring =
                     " Delete From Employees_Open_Form_Log " &
                     " Where  Emp_Code = '" & Trim(Txt_Code.Text) & "' " &
                     " And    Company_Code = " & vCompanyCode &
                     "                                                " &
                     " Delete From Employees_Layout_Settings " &
                     " Where  Emp_Code = '" & Trim(Txt_Code.Text) & "' " &
                     " And    Company_Code = " & vCompanyCode &
                     "                                                 " &
                     " Delete From Employees_Large_Tiles " &
                     " Where  Emp_Code = '" & Trim(Txt_Code.Text) & "' " &
                     " And    Company_Code = " & vCompanyCode &
                     "                                                 " &
                     " Delete From Users " &
                     " Where  Code = '" & Txt_Code.Text & "' " &
                     " And    Company_Code = " & vCompanyCode

                If cControls.fSendData(vSqlstring, Me.Name) > 0 Then
                    vcFrmLevel.vParentFrm.sForwardMessage("38", Me)
                    sNewRecord()
                End If
            End If
        End If
    End Sub
#End Region
#Region " Find                                                                           "
    Public Sub sFind()
        sOpenLov("Select Code, Name From Users Where 1 = 1 And Company_Code = " & vCompanyCode, "الموظفين")
    End Sub
#End Region
#End Region
#Region " New Record                                                                     "
    Public Sub sNewRecord()
        Try
            If fSaveAll(True) = False Then
                Return
            End If

            Tab_Main.Tabs("Tab_Details").Selected = True
            sNewCode()
            Txt_Desc.Clear()
            Txt_address.Clear()
            Txt_SalesTypes.Clear()
            Txt_FirstTimeDeal.Value = Nothing
            Txt_Remarks.Clear()
            Txt_Email1.Clear()
            Txt_Email2.Clear()

            Txt_DescL.Clear()
            Txt_Id.Clear()
            Txt_Id_ExpiredDate.Value = Nothing
            Txt_PassportNum.Clear()
            Txt_PassportNum_ExpiredDate.Value = Nothing
            Txt_Nationality.SelectedIndex = -1
            Txt_Qualification.Clear()
            Txt_Title.Clear()
            Txt_Salary.Value = Nothing
            Txt_PaymentMethod.SelectedIndex = -1

            Dim vItem As ValueListItem
            For Each vItem In Txt_SalesInvoice_Employees_Auth.Items
                vItem.CheckState = CheckState.Unchecked
            Next
            Txt_SalesInvoice_Employees_Auth.SelectedIndex = -1

            Txt_Profiles.SelectedIndex = -1
            Txt_Box.SelectedIndex = -1
            Txt_Store.SelectedIndex = -1
            Txt_SalesType.SelectedIndex = -1
            Txt_CostCenter.SelectedIndex = -1
            Txt_Branch.SelectedIndex = -1

            sClear_EmployeeType()

            Txt_FTel.Clear()
            Txt_MTel.Clear()
            Txt_UserName.Clear()
            Txt_Password.Clear()
            Chk_StopDeal.Checked = False
            Chk_IsSalesMan.Checked = False
            Chk_IsActive.Checked = True

            Chk_POS_DeleteItem.ToggleState = ToggleButtonState.Inactive
            Chk_POS_ChangePrice.ToggleState = ToggleButtonState.Inactive
            Chk_POS_Deductions.ToggleState = ToggleButtonState.Inactive

            vMasterBlock = "NI"
            vcFrmLevel.vRecPos = 0
            vcFrmLevel.vParentFrm.sPrintRec("")

            sLoadScreens_Master()

        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub
    Private Sub sNewCode()
        Dim vSqlCommand As String
        vSqlCommand = " Select IsNull(Max(Convert(Int, Code)), 0) + 1 " &
                      "              " &
                      " From   Users " &
                      " Where  1 = 1 " &
                      " And    Company_Code = " & vCompanyCode

        Txt_Code.Text = cControls.fReturnValue(vSqlCommand, Me.Name).PadLeft(3, "0")
    End Sub
    Private Sub sClear_EmployeeType()
        Opt_E.Checked = True
        Opt_C.Checked = False
        Opt_S.Checked = False
    End Sub

#End Region
#Region " sOpenLov                                                                       "
    Private Sub sOpenLov(ByVal pSqlStatment As String, ByVal pTitle As String)
        vLovReturn1 = ""
        VLovReturn2 = ""
        Dim Frm_Lov As New FRM_LovGeneral_A(pSqlStatment, pTitle)
        Frm_Lov.ShowDialog()
        If vLovReturn1.Length > 0 And VLovReturn2.Length > 0 Then
            sQuery(pItemCode:=vLovReturn1)
        End If
    End Sub
#End Region
#Region " Tab Mangment                                                                   "
    Private Sub Tab_Main_SelectedTabChanging(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinTabControl.SelectedTabChangingEventArgs) Handles Tab_Main.SelectedTabChanging
        If Tab_Main.Tabs("Tab_Details").Selected = True Then
            If fSaveAll(True) = False Then
                e.Cancel = True
            Else
                e.Cancel = False
                sNewRecord()
            End If
        End If
    End Sub
    Private Sub Tab_Main_SelectedTabChanged(ByVal sender As System.Object, ByVal e As Infragistics.Win.UltraWinTabControl.SelectedTabChangedEventArgs) Handles Tab_Main.SelectedTabChanged
        If Tab_Main.Tabs("Tab_Summary").Selected = True Then
            vcFrmLevel.vParentFrm = Me.ParentForm
            vcFrmLevel.vParentFrm.sEnableTools(True, False, False, False, False, False, False, False, "", False, False, "التفاصيل")
            Txt_Back.Visible = False
            sQuerySummary()
        ElseIf Tab_Main.Tabs("Tab_Details").Selected = True Then
            vcFrmLevel.vParentFrm.sEnableTools(True, True, True, True, True, True, True, True, "", False, False, "بحث")
            Txt_Back.Visible = True
        End If
    End Sub
    Public Sub sChangeTab()
        If Tab_Main.Tabs("Tab_Summary").Selected Then
            Tab_Main.Tabs("Tab_Details").Selected = True
            vcFrmLevel.vParentFrm.sEnableTools(True, True, True, True, True, True, True, True, "", True, False, "بحث")
        Else
            Tab_Main.Tabs("Tab_Summary").Selected = True
            vcFrmLevel.vParentFrm.sEnableTools(True, False, False, False, False, False, False, False, "", False, False, "التفاصيل")
        End If
    End Sub
#End Region
#Region " Help                                                                           "
    Public Sub sIsHelpEnabled(ByVal pEnabled As Boolean)
        'UltraToolTipManager1.Enabled = pEnabled
    End Sub
#End Region
#End Region
#Region " Master                                                                         "
#Region " Save                                                                           "
    Private Function fSaveValidation() As Boolean
        If Txt_Desc.Text.Length = 0 Then
            vcFrmLevel.vParentFrm.sForwardMessage("82", Me)
            Txt_Desc.Select()
            Return False
        End If

        If cControls.fCount_Rec(" From Users Where DescA = '" & Trim(Txt_Desc.Text) & "' And Code <> '" & Trim(Txt_Code.Text) & "' And Company_Code = " & vCompanyCode) > 0 Then
            vcFrmLevel.vParentFrm.sForwardMessage("82", Me)
            Txt_Desc.Select()
            Return False
        End If

        If Trim(Txt_UserName.Text) <> "" Then
            If cControls.fCount_Rec(" From Users Where UPPER(UserName) = '" & Trim(Txt_UserName.Text.ToUpper) & "' And Code <> '" & Trim(Txt_Code.Text) & "' And Company_Code = " & vCompanyCode) > 0 Then
                vcFrmLevel.vParentFrm.sForwardMessage("127", Me)
                Txt_UserName.Select()
                Return False
            End If
        End If

        If Opt_E.Checked Then
            If Txt_UserName.Text = "" Then
                vcFrmLevel.vParentFrm.sForwardMessage("14", Me)
                Txt_UserName.Select()
                Return False
            End If

            If Txt_Password.Text = "" Then
                vcFrmLevel.vParentFrm.sForwardMessage("15", Me)
                Txt_Password.Select()
                Return False
            End If

            'If Txt_Profiles.SelectedIndex = -1 Then
            '    vcFrmLevel.vParentFrm.sForwardMessage("60", Me)
            '    Txt_Profiles.Select()
            '    Return False
            'End If
        End If

        Return True
    End Function
    Private Sub sSaveMain()

        Dim vFirstTimeDeal, vId_ExpiredDate, vPassPort_ExpiredDate, vNationality, vDealType, vBox, vStore,
            vSalesType, vCostCenter, vProfile, vPaymentMethod As String

        Dim vSqlCommand As String = ""

        If Not Txt_FirstTimeDeal.Value = Nothing Then
            vFirstTimeDeal = " '" & Strings.Format(Txt_FirstTimeDeal.Value, "MM-dd-yyyy") & "' "
        Else
            vFirstTimeDeal = "NULL"
        End If

        If Not Txt_Id_ExpiredDate.Value = Nothing Then
            vId_ExpiredDate = " '" & Strings.Format(Txt_Id_ExpiredDate.Value, "MM-dd-yyyy") & "' "
        Else
            vId_ExpiredDate = "NULL"
        End If

        If Not Txt_PassportNum_ExpiredDate.Value = Nothing Then
            vPassPort_ExpiredDate = " '" & Strings.Format(Txt_PassportNum_ExpiredDate.Value, "MM-dd-yyyy") & "' "
        Else
            vPassPort_ExpiredDate = "NULL"
        End If

        If Txt_Nationality.Value = Nothing Then
            vNationality = "NULL"
        Else
            vNationality = " '" & Txt_Nationality.Value & "' "
        End If

        If Txt_SalesTypes.Value = Nothing Then
            vDealType = "NULL"
        Else
            vDealType = " '" & Txt_SalesTypes.Value & "' "
        End If

        If Txt_Store.Value = Nothing Then
            vStore = "NULL"
        Else
            vStore = " '" & Txt_Store.Value & "' "
        End If

        If Txt_Box.Value = Nothing Then
            vBox = "NULL"
        Else
            vBox = " '" & Txt_Box.Value & "' "
        End If

        If Txt_SalesType.Value = Nothing Then
            vSalesType = "NULL"
        Else
            vSalesType = " '" & Txt_SalesType.Value & "' "
        End If

        If Txt_CostCenter.Value = Nothing Then
            vCostCenter = "NULL"
        Else
            vCostCenter = " '" & Txt_CostCenter.Value & "' "
        End If

        If Txt_Profiles.SelectedIndex = -1 Then
            vProfile = "NULL"
        Else
            vProfile = " '" & Txt_Profiles.Value & "' "
        End If

        If Txt_PaymentMethod.SelectedIndex = -1 Then
            vPaymentMethod = "NULL"
        Else
            vPaymentMethod = " '" & Txt_PaymentMethod.Value & "' "
        End If

        If vMasterBlock = "I" Then

            sNewCode()

            vSqlCommand = " Insert Into Users  (             Code,                  Company_Code,                  DescA,                         DescL,                          Address,                         Remarks,                          Email,                            MTel,                     UserName,                    Password,                    IsActive ) " &
                          " Values             ('" & Trim(Txt_Code.Text) & "', " & vCompanyCode & ", '" & Trim(Txt_Desc.Text) & "', '" & Trim(Txt_DescL.Text) & "', '" & Trim(Txt_address.Text) & "', '" & Trim(Txt_Remarks.Text) & "', '" & Trim(Txt_Email1.Text) & "', '" & Trim(Txt_MTel.Text) & "', '" & Txt_UserName.Text & "', '" & Txt_Password.Text & "', '" & Chk_IsActive.Tag & "' )"

            sFillSqlStatmentArray(vSqlCommand)

        ElseIf vMasterBlock = "U" Then
            vSqlCommand = " Update   Users " &
                          " Set   DescA              = '" & Trim(Txt_Desc.Text) & "', " & vbCrLf &
                          "       DescL              = '" & Trim(Txt_DescL.Text) & "', " & vbCrLf &
                          "       Address            = '" & Trim(Txt_address.Text) & "', " & vbCrLf &
                          "       Remarks            = '" & Trim(Txt_Remarks.Text) & "', " & vbCrLf &
                          "       Email              = '" & Trim(Txt_Email1.Text) & "', " & vbCrLf &
                          "       MTel               = '" & Trim(Txt_MTel.Text) & "', " & vbCrLf &
                          "       UserName           = '" & Trim(Txt_UserName.Text) & "', " & vbCrLf &
                          "       PassWord           = '" & Trim(Txt_Password.Text) & "', " & vbCrLf &
                          "       IsActive           = '" & Chk_IsActive.Tag & "' " & vbCrLf &
                          "                                                       " &
                          " Where Code               = '" & Txt_Code.Text & "' " &
                          " And   Company_Code       =  " & vCompanyCode

            sFillSqlStatmentArray(vSqlCommand)
        End If
    End Sub

#End Region
#End Region
#Region " Details                                                                        "
#Region " Departments                                                                    "
#Region " DataBase                                                                       "
#Region " Query                                                                          "

#End Region
#Region " Save                                                                           "
    Private Function fValidate_Departments() As Boolean
        Try
            Return True
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Function

#End Region
#End Region
#Region " Form Level                                                                     "

    Private Sub Grd_Departments_Enter(ByVal sender As Object, ByVal e As System.EventArgs)
        Try
            vFocus = "Departments"
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub
#End Region
#End Region
#Region " Screens                                                                        "
#Region " DataBase                                                                       "
#Region " Load                                                                           "
    Private Sub sLoadScreens_Master()
        Try
            Dim vsqlCommand As New SqlClient.SqlCommand
            Dim vRowCounter As Integer
            vsqlCommand.CommandText =
            " Select  Code,                           " &
            "         DescA                           " &
            " From Systems                            " &
            " Where 1 = 1                             "

            vsqlCommand.Connection = cControls.vSqlConn
            cControls.vSqlConn.Open()
            Dim vSqlReader As SqlClient.SqlDataReader = vsqlCommand.ExecuteReader
            vRowCounter = 0
            DTS_Screens.Rows.Clear()

            Do While vSqlReader.Read
                DTS_Screens.Rows.SetCount(vRowCounter + 1)
                DTS_Screens.Rows(vRowCounter)("Sys_Code") = Trim(vSqlReader(0))
                If vSqlReader.IsDBNull(1) = False Then
                    DTS_Screens.Rows(vRowCounter)("Sys_Desc") = Trim(vSqlReader(1))
                End If
                DTS_Screens.Rows(vRowCounter)("DML") = "NI"
                Grd_Screens.Rows(vRowCounter).Appearance.BackColor = Color.Wheat
                vRowCounter += 1
            Loop
            cControls.vSqlConn.Close()
            vSqlReader.Close()
            Grd_Screens.UpdateData()

            For Each vRow As UltraDataRow In DTS_Screens.Rows
                Dim vChildBand As UltraDataBand = DTS_Screens.Band.ChildBands(0)
                sLoadScreens_Details(vRow, vChildBand)
            Next
        Catch ex As Exception
            cControls.vSqlConn.Close()
            MessageBox.Show(ex.Message)
        End Try

    End Sub
    Private Sub sLoadScreens_Details(ByVal pRow As UltraDataRow, ByVal pChildBand As UltraDataBand)
        Try
            Dim vChildRows As UltraDataRowsCollection = pRow.GetChildRows(pChildBand)
            Dim vsqlCommand As New SqlClient.SqlCommand
            Dim vRowCounter As Integer
            If vMasterBlock = "N" Or vMasterBlock = "U" Or vMasterBlock = "I" Or vMasterBlock = "NI" Then
                vsqlCommand.CommandText =
                " Select Code,                      " &
                "        DescA                 " &
                "        From   System_Modules  " &
                " Where Sys_Code =   '" & pRow("Sys_Code") & "'" &
                " And   IsNull(IsActive, 'Y') = 'Y' "

            End If

            vsqlCommand.Connection = cControls.vSqlConn
            cControls.vSqlConn.Open()
            Dim vSqlReader As SqlClient.SqlDataReader = vsqlCommand.ExecuteReader
            vRowCounter = 0
            'vChildRows.Clear()
            Do While vSqlReader.Read
                vChildRows.SetCount(vRowCounter + 1)
                vChildRows(vRowCounter)("Mod_Code") = Trim(vSqlReader(0))
                vChildRows(vRowCounter)("Mod_Desc") = Trim(vSqlReader(1))
                vChildRows(vRowCounter)("DML") = "NI"
                vRowCounter += 1
            Loop
            cControls.vSqlConn.Close()
            vSqlReader.Close()
            Grd_Summary.UpdateData()


        Catch ex As Exception
            cControls.vSqlConn.Close()
            MessageBox.Show(ex.Message)
            'cException.sHandleException(ex.Message, Me.Name, "sQuerySummaryDetails")
        End Try
    End Sub
#End Region
#Region " Query                                                                          "
    Private Sub sQueryScreens_Master()
        Try
            Dim vsqlCommand As New SqlClient.SqlCommand
            Dim vRowCounter As Integer
            vsqlCommand.CommandText =
            " Select  Profiles_Systems.Sys_Code,                       " &
            "         Systems.DescA,                                   " &
            "         Profiles_Systems.Remarks,                        " &
            "         Profiles_Systems.Enabled                         " &
            " From Profiles_Systems Inner Join Systems                 " &
            " On Systems.Code = Profiles_Systems.Sys_Code              " &
            "                                                          " &
            " Where 1 = 1                                              " &
            " And Emp_Code = '" & Txt_Code.Text & "'                   " &
            " And Profiles_Systems.Company_Code  =        " & vCompanyCode

            vsqlCommand.Connection = cControls.vSqlConn
            cControls.vSqlConn.Open()
            Dim vSqlReader As SqlClient.SqlDataReader = vsqlCommand.ExecuteReader
            vRowCounter = 0
            DTS_Screens.Rows.Clear()

            Do While vSqlReader.Read
                DTS_Screens.Rows.SetCount(vRowCounter + 1)
                DTS_Screens.Rows(vRowCounter)("Sys_Code") = Trim(vSqlReader(0))
                If vSqlReader.IsDBNull(1) = False Then
                    DTS_Screens.Rows(vRowCounter)("Sys_Desc") = Trim(vSqlReader(1))
                Else
                    DTS_Screens.Rows(vRowCounter)("Sys_Desc") = ""
                End If

                If vSqlReader.IsDBNull(2) = False Then
                    DTS_Screens.Rows(vRowCounter)("Remarks") = Trim(vSqlReader(2))
                Else
                    DTS_Screens.Rows(vRowCounter)("Remarks") = ""
                End If

                If vSqlReader.IsDBNull(3) = False Then
                    If Trim(vSqlReader(3)) = "Y" Then
                        DTS_Screens.Rows(vRowCounter)("Enabled") = True
                    Else
                        DTS_Screens.Rows(vRowCounter)("Enabled") = False
                    End If
                End If
                DTS_Screens.Rows(vRowCounter)("DML") = "N"
                Grd_Screens.Rows(vRowCounter).Appearance.BackColor = Color.Wheat
                vRowCounter += 1
            Loop
            cControls.vSqlConn.Close()
            vSqlReader.Close()
            Grd_Screens.UpdateData()

            sLoadScreens_Not_Found_In_Query()

            For Each vRow As UltraDataRow In DTS_Screens.Rows
                Dim vChildBand As UltraDataBand = DTS_Screens.Band.ChildBands(0)
                sQueryScreens_Details(vRow, vChildBand)
            Next
        Catch ex As Exception
            cControls.vSqlConn.Close()
            MessageBox.Show(ex.Message)
        End Try

    End Sub
    Private Sub sQueryScreens_Details(ByVal pRow As UltraDataRow, ByVal pChildBand As UltraDataBand)
        Try
            Dim vChildRows As UltraDataRowsCollection = pRow.GetChildRows(pChildBand)
            Dim vsqlCommand As New SqlClient.SqlCommand
            Dim vRowCounter As Integer

            If vMasterBlock = "N" Or vMasterBlock = "U" Or vMasterBlock = "I" Or vMasterBlock = "NI" Then
                vsqlCommand.CommandText =
                " Select Mod_Code,                      " &
                "        System_Modules.DescA,          " &
                "        Profiles_Systems_Modules.Remarks,                       " &
                "        Enabled                        " &
                "                                       " &
                "        From   Profiles_Systems_Modules  " &
                "        Inner Join System_Modules      " &
                "        On System_Modules.Sys_Code = Profiles_Systems_Modules.Sys_Code     " &
                "        And System_Modules.Code =    Profiles_Systems_Modules.Mod_Code     " &
                "                                       " &
                " Where Profiles_Systems_Modules.Emp_Code =   '" & Trim(Txt_Code.Text) & "'" &
                " And   Profiles_Systems_Modules.Sys_Code =   '" & pRow("Sys_Code") & "'" &
                " And   Profiles_Systems_Modules.Company_Code  = " & vCompanyCode

            End If

            vsqlCommand.Connection = cControls.vSqlConn
            cControls.vSqlConn.Open()
            Dim vSqlReader As SqlClient.SqlDataReader = vsqlCommand.ExecuteReader
            vRowCounter = 0
            'vChildRows.Clear()
            Do While vSqlReader.Read
                vChildRows.SetCount(vRowCounter + 1)
                vChildRows(vRowCounter)("Mod_Code") = Trim(vSqlReader(0))
                vChildRows(vRowCounter)("Mod_Desc") = Trim(vSqlReader(1))
                If vSqlReader.IsDBNull(2) = False Then
                    vChildRows(vRowCounter)("Remarks") = Trim(vSqlReader(2))
                Else
                    vChildRows(vRowCounter)("Remarks") = ""
                End If
                If vSqlReader.IsDBNull(3) = False Then
                    If Trim(vSqlReader(3)) = "Y" Then
                        vChildRows(vRowCounter)("Enabled") = True
                    Else
                        vChildRows(vRowCounter)("Enabled") = False
                    End If
                End If

                vChildRows(vRowCounter)("DML") = "N"
                vRowCounter += 1
            Loop
            cControls.vSqlConn.Close()
            vSqlReader.Close()
            Grd_Summary.UpdateData()

            vsqlCommand.CommandText =
                " Select Code,                      " &
                "        DescA                 " &
                "        From   System_Modules  " &
                " Where Sys_Code =   '" & pRow("Sys_Code") & "'" &
                " And   IsNull(IsActive, 'Y') = 'Y' "

            vsqlCommand.Connection = cControls.vSqlConn
            cControls.vSqlConn.Open()
            vSqlReader = vsqlCommand.ExecuteReader
            vRowCounter = vChildRows.Count
            Dim vRow As UltraDataRow

            'vChildRows.Clear()
            Do While vSqlReader.Read
                For Each vRow In vChildRows
                    If Trim(vRow("Mod_Code")) = Trim(vSqlReader(0)) Then
                        Continue Do
                    End If
                Next

                vChildRows.SetCount(vRowCounter + 1)
                vChildRows(vRowCounter)("Mod_Code") = Trim(vSqlReader(0))
                vChildRows(vRowCounter)("Mod_Desc") = Trim(vSqlReader(1))

                vChildRows(vRowCounter)("DML") = "NI"
                vRowCounter += 1
            Loop
            cControls.vSqlConn.Close()
            vSqlReader.Close()
            Grd_Summary.UpdateData()

        Catch ex As Exception
            cControls.vSqlConn.Close()
            MessageBox.Show(ex.Message)
            'cException.sHandleException(ex.Message, Me.Name, "sQuerySummaryDetails")
        End Try
    End Sub

    Private Sub sLoadScreens_Not_Found_In_Query()
        Try
            Dim vsqlCommand As New SqlClient.SqlCommand
            Dim vRowCounter As Integer
            vsqlCommand.CommandText =
            " Select  Code,                           " &
            "         DescA                           " &
            " From Systems                            " &
            " Where 1 = 1                             "

            vsqlCommand.Connection = cControls.vSqlConn
            cControls.vSqlConn.Open()
            Dim vSqlReader As SqlClient.SqlDataReader = vsqlCommand.ExecuteReader
            vRowCounter = Grd_Screens.Rows.Count

            Do While vSqlReader.Read
                For Each vRow As UltraGridRow In Grd_Screens.Rows
                    If Trim(vRow.Cells("Sys_Code").Text) = Trim(vSqlReader(0)) Then
                        Continue Do
                    End If
                Next

                DTS_Screens.Rows.SetCount(vRowCounter + 1)
                DTS_Screens.Rows(vRowCounter)("Sys_Code") = Trim(vSqlReader(0))
                If vSqlReader.IsDBNull(1) = False Then
                    DTS_Screens.Rows(vRowCounter)("Sys_Desc") = Trim(vSqlReader(1))
                End If
                DTS_Screens.Rows(vRowCounter)("DML") = "NI"
                Grd_Screens.Rows(vRowCounter).Appearance.BackColor = Color.Wheat
                vRowCounter += 1
            Loop
            cControls.vSqlConn.Close()
            vSqlReader.Close()
            Grd_Screens.UpdateData()

        Catch ex As Exception
            cControls.vSqlConn.Close()
            MessageBox.Show(ex.Message)
        End Try

    End Sub

#End Region
#Region " Save                                                                           "
    Private Function fValidateScreens() As Boolean
        Try
            Return True
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Function
    Private Sub sSaveScreens_Systems()
        Try
            Dim vRow As UltraGridRow
            Grd_Screens.UpdateData()
            'Grd_Details.PerformAction(UltraGridAction.ExitEditMode)
            Dim vCounter As Integer = 0
            For Each vRow In Grd_Screens.Rows

                Dim vSqlString, vEnabled As String
                If vRow.Cells("Enabled").Text = True Then
                    vEnabled = "Y"
                Else
                    vEnabled = "N"
                End If

                If vRow.Cells("DML").Value = "NI" Or vRow.Cells("DML").Value = "I" Then
                    'vSqlString = " Select IsNull(Max(Ser), 0) + 1 From Count_Details " & _
                    '             " Where CT_Code = '" & Txt_Code.Text & "'"
                    'vGetSerial = cBase.fReturnValue(vSqlString, Me.Name).PadLeft(3, "0") + vCounter
                    vSqlString = " Insert Into Profiles_Systems   (          Emp_Code,                                  Sys_Code,                    Company_Code,                          Remarks,                   Enabled )" &
                                   "                    Values    ('" & Trim(Txt_Code.Text) & "', '" & Trim(vRow.Cells("Sys_Code").Value) & "', " & vCompanyCode & ", '" & Trim(vRow.Cells("Remarks").Text) & "', '" & vEnabled & "')"

                    sFillSqlStatmentArray(vSqlString)
                    vCounter += 1
                ElseIf vRow.Cells("DML").Value = "U" Then
                    vSqlString = " Update  Profiles_Systems " &
                                  " Set     Enabled      = '" & vEnabled & "', " &
                                  "         Remarks      = '" & Trim(vRow.Cells("Remarks").Text) & "' " &
                                  " Where   Emp_Code     = '" & Txt_Code.Text & "'" &
                                  " And     Sys_Code     = '" & vRow.Cells("Sys_Code").Value & "'" &
                                  " And     Company_Code  = " & vCompanyCode

                    sFillSqlStatmentArray(vSqlString)
                End If
                sSaveScreens_Modules(vRow)
            Next
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub
    Private Sub sSaveScreens_Modules(ByVal pRow As UltraGridRow)
        Try
            Dim vRow As UltraGridRow
            Grd_Screens.UpdateData()
            'Grd_Details.PerformAction(UltraGridAction.ExitEditMode)
            Dim vCounter As Integer = 0
            For Each vRow In pRow.ChildBands(0).Rows

                Dim vSqlString, vEnabled As String
                If vRow.Cells("Enabled").Text = True Then
                    vEnabled = "Y"
                Else
                    vEnabled = "N"
                End If

                If vRow.Cells("DML").Value = "NI" Or vRow.Cells("DML").Value = "I" Then
                    'vSqlString = " Select IsNull(Max(Ser), 0) + 1 From Count_Details " & _
                    '             " Where CT_Code = '" & Txt_Code.Text & "'"
                    'vGetSerial = cBase.fReturnValue(vSqlString, Me.Name).PadLeft(3, "0") + vCounter
                    vSqlString = " Insert Into Profiles_Systems_Modules  (          Emp_Code,                  Company_Code,                          Sys_Code,                                     Mod_Code,                                     Remarks,                   Enabled )" &
                                   "                               Values('" & Trim(Txt_Code.Text) & "', " & vCompanyCode & ", '" & Trim(vRow.ParentRow.Cells("Sys_Code").Value) & "', '" & Trim(vRow.Cells("Mod_Code").Value) & "', '" & Trim(vRow.Cells("Remarks").Text) & "', '" & vEnabled & "')"

                    sFillSqlStatmentArray(vSqlString)
                    vCounter += 1
                ElseIf vRow.Cells("DML").Value = "U" Then
                    vSqlString = " Update  Profiles_Systems_Modules " &
                                  " Set     Enabled      = '" & vEnabled & "', " &
                                  "         Remarks      = '" & Trim(vRow.Cells("Remarks").Text) & "' " &
                                  " Where   Emp_Code     = '" & Trim(Txt_Code.Text) & "' " &
                                  " And     Sys_Code     = '" & vRow.ParentRow.Cells("Sys_Code").Value & "'" &
                                  " And     Mod_Code     = '" & vRow.Cells("Mod_Code").Value & "'" &
                                  " And   Company_Code  = " & vCompanyCode

                    sFillSqlStatmentArray(vSqlString)
                End If
            Next
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Sub
#End Region
#End Region
#Region " Form Level                                                                     "
    Private Sub Grd_Screens_CellChange(ByVal sender As Object, ByVal e As Infragistics.Win.UltraWinGrid.CellEventArgs) Handles Grd_Screens.CellChange
        Try
            Grd_Screens.UpdateData()

            If sender.ActiveRow.Cells("DML").Value = "NI" Then
                sender.ActiveRow.Cells("DML").Value = "I"
            ElseIf sender.ActiveRow.Cells("DML").Value = "N" Then
                sender.ActiveRow.Cells("DML").Value = "U"
            End If

            If Grd_Screens.ActiveRow.Band.Key = "Band 0" Then
                If Grd_Screens.ActiveRow.Cells("Enabled").Activated Then
                    If Grd_Screens.ActiveRow.Cells("Enabled").Value = True Then
                        For Each vRow As UltraGridRow In Grd_Screens.ActiveRow.ChildBands(0).Rows
                            vRow.Cells("Enabled").Value = True

                            If vRow.Cells("DML").Value = "NI" Then
                                vRow.Cells("DML").Value = "I"
                            ElseIf vRow.Cells("DML").Value = "N" Then
                                vRow.Cells("DML").Value = "U"
                            End If
                        Next
                    Else
                        For Each vRow As UltraGridRow In Grd_Screens.ActiveRow.ChildBands(0).Rows
                            vRow.Cells("Enabled").Value = False

                            If vRow.Cells("DML").Value = "NI" Then
                                vRow.Cells("DML").Value = "I"
                            ElseIf vRow.Cells("DML").Value = "N" Then
                                vRow.Cells("DML").Value = "U"
                            End If
                        Next
                    End If
                End If
            ElseIf Grd_Screens.ActiveRow.Band.Key = "Band 1" Then
                If Grd_Screens.ActiveRow.Cells("Enabled").Activated Then
                    If Grd_Screens.ActiveRow.Cells("Enabled").Value = True Then
                        Grd_Screens.ActiveRow.ParentRow.Cells("Enabled").Value = True

                        If Grd_Screens.ActiveRow.ParentRow.Cells("DML").Value = "NI" Then
                            Grd_Screens.ActiveRow.ParentRow.Cells("DML").Value = "I"
                        ElseIf Grd_Screens.ActiveRow.ParentRow.Cells("DML").Value = "N" Then
                            Grd_Screens.ActiveRow.ParentRow.Cells("DML").Value = "U"
                        End If
                    Else
                        For Each vRow As UltraGridRow In Grd_Screens.ActiveRow.ParentRow.ChildBands(0).Rows
                            If vRow.Cells("Enabled").Value = True Then
                                Exit Sub
                            End If
                        Next
                        Grd_Screens.ActiveRow.ParentRow.Cells("Enabled").Value = False

                        If Grd_Screens.ActiveRow.ParentRow.Cells("DML").Value = "NI" Then
                            Grd_Screens.ActiveRow.ParentRow.Cells("DML").Value = "I"
                        ElseIf Grd_Screens.ActiveRow.ParentRow.Cells("DML").Value = "N" Then
                            Grd_Screens.ActiveRow.ParentRow.Cells("DML").Value = "U"
                        End If
                    End If
                End If
            End If

            Grd_Screens.UpdateData()
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Sub
    Private Sub Grd_Screens_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles Grd_Screens.Enter
        Try
            vFocus = "Screens"
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub
#End Region
#End Region
#End Region

#Region " Summary                                                                        "
    Private Sub sQuerySummary(Optional ByVal pCode As String = "", Optional ByVal pDesc As String = "")
        Try
            Dim vCodeFilter, vDescFilter, vIsActive_Filter As String

            If pCode = "" Then
                vCodeFilter = ""
            Else
                vCodeFilter = " And Users.Code Like '%" & pCode & "%'"
            End If

            If pDesc = "" Then
                vDescFilter = ""
            Else
                vDescFilter = " And Users.DescA Like '%" & pDesc & "%'"
            End If

            If Not Txt_FndBy_IsActive.SelectedItem Is Nothing Then
                If Txt_FndBy_IsActive.SelectedItem.DataValue = "All" Then
                    vIsActive_Filter = ""
                Else
                    vIsActive_Filter = " And IsNull(IsActive, 'Y') = 'Y' "
                End If
            End If

            Dim vsqlCommand As New SqlClient.SqlCommand
            Dim vRowCounter As Integer
            vsqlCommand.CommandText =
            "  Select Users.Code, " &
            "         Users.DescA,                          " &
            "         Mtel,                                 " &
            "         Users.Remarks                         " &
            "                                               " &
            " From Users LEFT JOIN Profiles                 " &
            " ON Profiles.Code = Users.Profile              " &
            " AND Profiles.Company_Code = Users.Company_Code" &
            "                                               " &
            " Where 1 = 1                                   " &
            " And IsNull(IsAdmin, 'N') = 'N'                " &
            " And Users.Company_Code =       " & vCompanyCode &
            vCodeFilter &
            vDescFilter

            vsqlCommand.Connection = cControls.vSqlConn
            cControls.vSqlConn.Open()
            Dim vSqlReader As SqlClient.SqlDataReader = vsqlCommand.ExecuteReader
            vRowCounter = 0
            DTS_Summary.Rows.Clear()

            Do While vSqlReader.Read
                DTS_Summary.Rows.SetCount(vRowCounter + 1)
                DTS_Summary.Rows(vRowCounter)("Code") = Trim(vSqlReader("Code"))

                If IsDBNull(vSqlReader("DescA")) = False Then
                    DTS_Summary.Rows(vRowCounter)("DescA") = Trim(vSqlReader("DescA"))
                End If

                If IsDBNull(vSqlReader("MTel")) = False Then
                    DTS_Summary.Rows(vRowCounter)("MTel") = Trim(vSqlReader("MTel"))
                Else
                    DTS_Summary.Rows(vRowCounter)("MTel") = ""
                End If

                If IsDBNull(vSqlReader("Remarks")) = False Then
                    DTS_Summary.Rows(vRowCounter)("Remarks") = Trim(vSqlReader("Remarks"))
                Else
                    DTS_Summary.Rows(vRowCounter)("Remarks") = ""
                End If
                vRowCounter += 1
            Loop
            cControls.vSqlConn.Close()
            vSqlReader.Close()
            Grd_Summary.UpdateData()

        Catch ex As Exception
            cControls.vSqlConn.Close()
            MessageBox.Show(ex.Message)
            'cException.sHandleException(ex.Message, Me.Name, "sQuerySummaryMain")
        End Try
    End Sub

    Private Sub Txt_AllFilters_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) _
    Handles Txt_FndByCode.ValueChanged, Txt_FndByDesc.ValueChanged, Txt_FndBy_IsActive.ValueChanged

        sQuerySummary(Trim(Txt_FndByCode.Text), Trim(Txt_FndByDesc.Text))
    End Sub

    Private Sub Grd_Summary_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles Grd_Summary.DoubleClick

        If Grd_Summary.Selected.Rows.Count > 0 Then
            sQuery(pItemCode:=Grd_Summary.ActiveRow.Cells("Code").Value)
        Else
            sNewRecord()
        End If
        Tab_Main.Tabs("Tab_Details").Selected = True
    End Sub

    Private Sub GridControl1_DoubleClick(sender As Object, e As EventArgs) Handles GridControl1.DoubleClick
        Dim view As DevExpress.XtraGrid.Views.Layout.LayoutView = GridControl1.MainView

        Dim vCode As String = Trim(view.GetRowCellValue(view.FocusedRowHandle, "Code"))

        sQuery(pItemCode:=vCode)
        Tab_Main.Tabs("Tab_Details").Selected = True

    End Sub

    Private Sub Chk_SelectAll_CheckedChanged(sender As Object, e As EventArgs) Handles Chk_SelectAll.CheckedChanged
        Dim vItem As ValueListItem

        If Chk_SelectAll.Checked Then
            For Each vItem In Txt_SalesInvoice_Employees_Auth.Items
                vItem.CheckState = CheckState.Checked
            Next
        ElseIf Not Chk_SelectAll.Checked Then
            For Each vItem In Txt_SalesInvoice_Employees_Auth.Items
                vItem.CheckState = CheckState.Unchecked
            Next
        End If

    End Sub

    Private Sub Txt_Back_Click(sender As Object, e As EventArgs) Handles Txt_Back.Click
        Tab_Main.Tabs("Tab_Summary").Selected = True
    End Sub

#End Region
    Private Sub Btn_Close_Click(sender As Object, e As EventArgs)
        Me.Close()
    End Sub

    Private Sub sHide_ToolbarMain_Tools()
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_New").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_Save").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_Delete").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_Print").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_NextRecord").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_PreviousRecord").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_LastRecord").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_FirstRecord").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_CloseWindow").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_GotoRecord").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Btn_ChangeUser").SharedProps.Visible = True
        vcFrmLevel.vParentFrm.ToolBar_Main.Tools("Themes").SharedProps.Visible = True
    End Sub
End Class